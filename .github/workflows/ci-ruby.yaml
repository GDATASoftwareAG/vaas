name: vaas-ruby-ci
on:
  push:
    branches:
      - main
    paths:
      - "ruby/**"
      - ".github/workflows/ci-ruby.yaml"
    tags:
      - "rb*"
  pull_request:
    branches:
      - main
    paths:
      - "ruby/**"
      - ".github/workflows/ci-ruby.yaml"
  workflow_dispatch:

jobs:
  build-ruby:
    name: Build & Test Ruby SDK
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1" # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: extract version
        if: startsWith(github.ref, 'refs/tags/rb')
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/rb}" >> $GITHUB_ENV
          echo $RELEASE_VERSION

      - name: set version
        if: startsWith(github.ref, 'refs/tags/rb')
        run: |
          sed -i "s/VERSION = '0.0.1'/VERSION = '$RELEASE_VERSION'/g" ./ruby/lib/vaas/version.rb

      - name: set version without tag
        if: ${{ !startsWith(github.ref, 'refs/tags/rb') }}
        run: |
          echo RELEASE_VERSION=$(sed -r -n 's/.*([0-9]+\.[0-9]+\.[0-9]+).*/\1/p' ./ruby/lib/vaas/version.rb) >> $GITHUB_ENV
          echo $RELEASE_VERSION

      - name: build gem
        run: gem build vaas.gemspec
        working-directory: ruby

      - name: install dependencies/gem
        run: |
          echo $RELEASE_VERSION
          gem install "vaas-$RELEASE_VERSION.gem"
        working-directory: ruby

      - name: Test
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/rb')
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          VAAS_URL: "wss://gateway.production.vaas.gdatasecurity.de"
          TOKEN_URL: "https://account.gdata.de/realms/vaas-production/protocol/openid-connect/token"
        run: ruby vaas_test.rb
        working-directory: ruby/test

      - name: Test staging
        if: github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/rb')
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.STAGING_CLIENT_SECRET }}
          VAAS_URL: "wss://gateway.staging.vaas.gdatasecurity.de"
          TOKEN_URL: "https://account-staging.gdata.de/realms/vaas-staging/protocol/openid-connect/token"
        run: ruby vaas_test.rb
        working-directory: ruby/test

      - name: Run simple example
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          URL: "https://www.gdata.de/"
        run: ruby simple_example.rb
        working-directory: ruby/examples

      - name: Run example with reconnect
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          URL: "https://www.gdata.de/"
        run: ruby example_with_reconnect.rb
        working-directory: ruby/examples

      - name: Push to rubygems.org
        if: startsWith(github.ref, 'refs/tags/rb')
        env:
          RUBY_GEMS_TOKEN: ${{ secrets.RUBY_GEMS_TOKEN }}
        run: |
          mkdir -p ~/.gem
          cat << EOF > ~/.gem/credentials
          ---
          :rubygems_api_key: ${RUBY_GEMS_TOKEN}
          EOF
          chmod 0600 ~/.gem/credentials
          set -x
          gem update --system
          gem push "vaas-$RELEASE_VERSION.gem"
        working-directory: ruby

      - name: Microsoft Teams Notification
        uses: skitionek/notify-microsoft-teams@master
        if: failure()
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          overwrite: "{title: `Failed workflow on for VaaS-SDK ${workflow}`, sections: [{activityTitle: 'build failed', activitySubtitle: `Failed workflow on for VaaS-SDK ${workflow}`, activityImage: 'https://adaptivecards.io/content/cats/3.png'}], themeColor: '#ff0000'}"

name: vaas-dotnet-ci
on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    branches:
      - main

jobs:
  build-dotnet:
    name: Build & Test C# SDK
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ["6.0.x"]

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Install dependencies
        run: dotnet restore
        working-directory: dotnet/Vaas

      - name: extract version
        if: startsWith(github.ref, 'refs/tags/cs')
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/cs}" >> $GITHUB_ENV
          echo $RELEASE_VERSION

      - name: set version
        if: startsWith(github.ref, 'refs/tags/cs')
        run: |
          sed -i "s/<Version>0\.0\.0/<Version>$RELEASE_VERSION/g" ./dotnet/Vaas/src/Vaas/Vaas.csproj

      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: dotnet/Vaas

      - name: Test
        if: github.ref == 'refs/heads/main'
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          VAAS_URL: "wss://gateway-vaas.gdatasecurity.de"
          TOKEN_URL: "https://keycloak-vaas.gdatasecurity.de/realms/vaas/protocol/openid-connect/token"
        run: dotnet test --no-restore --verbosity normal
        working-directory: dotnet/Vaas

      - name: Test staging
        if: github.ref != 'refs/heads/main'
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.STAGING_CLIENT_SECRET }}
          VAAS_URL: "wss://staging-gateway-vaas.gdatasecurity.de"
          TOKEN_URL: "https://staging-keycloak-vaas.gdatasecurity.de/realms/vaas/protocol/openid-connect/token"
        run: dotnet test --no-restore --verbosity normal
        working-directory: dotnet/Vaas

      - name: Run example
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          SCAN_PATH: "Program.cs"
        run: dotnet run
        working-directory: dotnet/examples/VaasExample

      - name: Pack
        if: startsWith(github.ref, 'refs/tags/cs')
        run: dotnet pack -c Release src/Vaas
        working-directory: dotnet/Vaas

      - name: Push to nuget
        if: startsWith(github.ref, 'refs/tags/cs')
        env:
          NUGET_KEY: ${{ secrets.NUGET_KEY }}
          NUGET_FEED: https://api.nuget.org/v3/index.json
        run: dotnet nuget push src/Vaas/bin/Release/*.nupkg --skip-duplicate  --source $NUGET_FEED --api-key $NUGET_KEY
        working-directory: dotnet/Vaas

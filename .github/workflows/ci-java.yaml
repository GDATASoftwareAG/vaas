name: vaas-java-ci
on:
  push:
    branches:
      - main
    paths:
      - "java/**"
      - ".github/workflows/ci-java.yaml"
    tags:
      - "*"
  pull_request:
    branches:
      - main
    paths:
      - "java/**"
      - ".github/workflows/ci-java.yaml"

jobs:
  build-java:
    name: Build & Test Java SDK
    runs-on: ubuntu-20.04

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install Java
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "adopt"

      - name: setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: "7.2"

      - name: run tests
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/java')
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          VAAS_URL: "wss://gateway-vaas.gdatasecurity.de"
          TOKEN_URL: "https://keycloak-vaas.gdatasecurity.de/realms/vaas/protocol/openid-connect/token"
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test
          gradle-version: "7.2"
          build-root-directory: java

      - name: run tests staging
        if: github.ref != 'refs/heads/main' && ! startsWith(github.ref, 'refs/tags/java')
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.STAGING_CLIENT_SECRET }}
          VAAS_URL: "wss://gateway.staging.vaas.gdatasecurity.de"
          TOKEN_URL: "https://backend.gdata-auth.k8s-staging.gdata.de/realms/vaas/protocol/openid-connect/token"
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test
          gradle-version: "7.2"
          build-root-directory: java

      - name: run examples for file
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          SCAN_PATH: "src/main/java/de/gdata/vaasexample/Main.java"
        uses: gradle/gradle-build-action@v2
        with:
          arguments: fileScan
          gradle-version: "7.2"
          build-root-directory: java/examples/VaasExample

      - name: run examples for url
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: urlScan
          gradle-version: "7.2"
          build-root-directory: java/examples/VaasExample

      - name: extract version
        if: startsWith(github.ref, 'refs/tags/java')
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/java}" >> $GITHUB_ENV
          echo $RELEASE_VERSION

      - name: set version
        if: startsWith(github.ref, 'refs/tags/java')
        run: |
          sed -i "s/version = '0\.0\.0'/version = '$RELEASE_VERSION'/g" ./java/build.gradle

      - name: publish Maven package
        if: startsWith(github.ref, 'refs/tags/java')
        env:
          ORG_GRADLE_PROJECT_username: ${{ secrets.ORG_GRADLE_PROJECT_USERNAME }}
          ORG_GRADLE_PROJECT_password: ${{ secrets.ORG_GRADLE_PROJECT_PASSWORD }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publish
          gradle-version: "7.2"
          build-root-directory: java

      - name: push to Maven Central
        if: startsWith(github.ref, 'refs/tags/java')
        env:
          ORG_GRADLE_PROJECT_username: ${{ secrets.ORG_GRADLE_PROJECT_USERNAME }}
          ORG_GRADLE_PROJECT_password: ${{ secrets.ORG_GRADLE_PROJECT_PASSWORD }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: closeAndReleaseRepository
          gradle-version: "7.2"
          build-root-directory: java

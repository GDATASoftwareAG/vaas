name: vaas-golang-ci
on:
  push:
    branches:
      - main
    paths:
      - "golang/vaas/**"
      - ".github/workflows/ci-golang.yaml"
    tags:
      - "*"
  pull_request:
    branches:
      - main
    paths:
      - "golang/vaas/**"
      - ".github/workflows/ci-golang.yaml"

jobs:
  build-golang:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up Golang
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true
          cache-dependency-path: golang/vaas/go.sum
      - name: run tests staging
        if: github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/go')
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.STAGING_CLIENT_SECRET }}
          VAAS_URL: "wss://staging-gateway-vaas.gdatasecurity.de"
          TOKEN_URL: "https://staging-keycloak-vaas.gdatasecurity.de/realms/vaas/protocol/openid-connect/token"
        run: go test ./pkg/authenticator ./pkg/broadcast ./pkg/vaas
        working-directory: golang/vaas/    
      - name: run tests
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/go')
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          VAAS_URL: "wss://gateway-vaas.gdatasecurity.de"
          TOKEN_URL: "https://keycloak-vaas.gdatasecurity.de/realms/vaas/protocol/openid-connect/token"
        run: go test ./pkg/authenticator ./pkg/broadcast ./pkg/vaas
        working-directory: golang/vaas/
      - name: publish module
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/go')
        run: GOPROXY=proxy.golang.org go list -m github.com/GDATASoftwareAG/vaas/golang/vaas@${GITHUB_REF#refs/tags/go}
plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'de.gdata'
version = '0.0.0'

repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.36'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'org.jetbrains:annotations:26.0.1'
    implementation 'io.github.cdimascio:dotenv-java:3.1.0'
    testImplementation 'org.testng:testng:7.10.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.4'
    testImplementation 'org.mockito:mockito-core:5.14.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.11.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.4'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.11.4'

    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
}

test {
    useJUnitPlatform()
    testLogging {
      events "passed", "skipped", "failed"

      showExceptions true
      exceptionFormat "full"
      showCauses true
      showStackTraces true
      showStandardStreams true
    }
}

tasks.register('testWithoutErrorLogProducer', Test) {
    useJUnitPlatform {
        excludeTags 'ErrorLogProducer'
    }
    testLogging {
        events "passed", "skipped", "failed"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams true
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = 'G DATA VaaS'
                description = 'Verdict-as-a-Service (VaaS) is a service that provides a platform for scanning files for malware and other threats. It allows easy integration in your application. With a few lines of code, you can start scanning files for malware.'
                url = 'https://github.com/GDATASoftwareAG/vaas'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://github.com/GDATASoftwareAG/vaas/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'gdata'
                        name = 'GDATA Cyberdefense'
                        email = 'opensource@gdata.de'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:GDATASoftwareAG/vaas.git'
                    url = 'https://github.com/GDATASoftwareAG/vaas'
                }

                from components.java
            }
        }
    }

    signing {
        def signingKey = findProperty("signingKey")
        def signingPassword = findProperty("signingPassword")
        useInMemoryPgpKeys(signingKey, signingPassword)        
        sign publishing.publications.mavenJava
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('repos/releases')
        }
    }
}

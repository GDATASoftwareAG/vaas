plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'de.gdata'
version = '0.0.0'

repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.40'
    implementation 'com.google.code.gson:gson:2.13.1'
    implementation 'org.java-websocket:Java-WebSocket:1.6.0'
    implementation 'org.jetbrains:annotations:26.0.2-1'
    implementation 'io.github.cdimascio:dotenv-java:3.2.0'
    testImplementation 'org.testng:testng:7.11.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.13.4'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.13.4'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.13.4'


    compileOnly 'org.projectlombok:lombok:1.18.40'
    annotationProcessor 'org.projectlombok:lombok:1.18.40'

    testCompileOnly 'org.projectlombok:lombok:1.18.40'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.40'
}

test {
    useJUnitPlatform()
    testLogging {
      events "passed", "skipped", "failed"

      showExceptions true
      exceptionFormat "full"
      showCauses true
      showStackTraces true
    }
}

tasks.register('testWithoutErrorLogProducer', Test) {
    useJUnitPlatform {
        excludeTags 'ErrorLogProducer'
    }
    testLogging {
        events "passed", "skipped", "failed"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
    }
}

publishing {    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = 'de.gdata'
            artifactId = 'vaas' // Ersetzen Sie dies durch die ID Ihres Artifacts
            version = '8-future'
        }
    }
    repositories {
        maven {
            name = 'local'
            url = uri('file://workspaces/vaas/java/build/repos')
        }
    }
}
